{
  // Place your snippets for ruby here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  // based on https://github.com/Chris56974/ruby-and-rails-snippets/blob/main/snippets/ruby.json
  "cla1": {
    "prefix": "cla1",
    "body": "class $1\n\tdef initialize($2)\n    @$2 = $2\n  end\n$0\n  private\n\n  attr_reader :$2\nend",
    "description": "Class and initializer with one positional argument"
  },
  "cla2": {
    "prefix": "cla2",
    "body": "class $1\n\tdef initialize($2, $3)\n    @$2 = $2\n    @$3 = $3\n  end\n$0\n  private\n\nend",
    "description": "Class and initializer with two positional arguments"
  },
  "cla3": {
    "prefix": "cla3",
    "body": "class $1\n\tdef initialize($2, $3, $4)\n    @$2 = $2\n    @$3 = $3\n    @$4 = $4\n  end\n$0\n  private\n\nend"
  },
  "clak1": {
    "prefix": "clak1",
    "body": "class $1\n\tdef initialize($2)\n    @$2 = $2\n  end\n$0\n  private\n\n  attr_reader :$2\nend"
  },
  "clak2": {
    "prefix": "clak2",
    "body": "class $1\n\tdef initialize($2, $3)\n    @$2 = $2\n    @$3 = $3\n  end\n$0\n  private\n\nend"
  },
  "clak3": {
    "prefix": "clak3",
    "body": "class $1\n\tdef initialize($2, $3, $4)\n    @$2 = $2\n    @$3 = $3\n    @$4 = $4\n  end\n$0\n  private\n\nend"
  }
}
